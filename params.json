{"name":"Jsonpatch.js","tagline":"experimenting with slices in Json pointers and patches","body":"# JsonPatch with Slices (this is an experiment)\r\n\r\nThis is library loosely based on the [json-patch](http://tools.ietf.org/html/draft-ietf-appsawg-json-patch-05) draft.\r\n\r\nThe project was motivated by an [earlier rant](https://gist.github.com/icholy/5050533)\r\n\r\n**Original Data**\r\n\r\n``` javascript\r\n\r\nvar JsonPatch = require('jsonpatch'),\r\n    patcher = new JsonPatch();\r\n\r\nvar someData = {\r\n\tfoo: [\r\n\t\t{ x: 1 },\r\n\t\t{ y: 2 }\r\n\t]\r\n};\r\n```\r\n\r\n**Remove slice**\r\n\r\n``` javascript\r\npatcher.apply(someData, [{ op: 'remove', path: '/foo/0:2'}] );\r\n\r\n// resulting object\r\n{\r\n  foo: [],\r\n}\r\n```\r\n\r\n**Move slice contents**\r\n\r\n``` javascript\r\npatcher.apply(someData, [{ op: 'move', path: '/foo/0:2/x', to: '/bar' }] );\r\n\r\n// resulting object\r\n{\r\n  foo: [\r\n    {},\r\n    {}\r\n  ],\r\n  bar: [1, 2]\r\n}\r\n```\r\ncool eh? Splices can be used with the other operations too: \r\n\r\n* `add`\r\n* `remove`\r\n* `replace`\r\n* `move`\r\n* `copy`\r\n\r\nSee more examples in the [tests](https://github.com/icholy/JsonPatch.js/blob/master/test/example.js)\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}